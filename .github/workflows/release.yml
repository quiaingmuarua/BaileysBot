name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本 (例如: v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Baileys submodule
      run: |
        cd baileys
        npm ci
        npm run build
        cd ..
    
    - name: Run tests
      run: |
        echo "🧪 运行发布前测试..."
        node --check example.js
        npm audit --audit-level high
        echo "✅ 所有测试通过"
    
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "发布版本: $VERSION"
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "📝 生成更新日志..."
        
        # 获取上一个标签
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "从 $PREVIOUS_TAG 到 ${{ steps.version.outputs.version }} 的更改:"
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD > changes.txt
        else
          echo "首次发布"
          git log --pretty=format:"- %s (%h)" > changes.txt
        fi
        
        # 检查 baileys submodule 更新
        cd baileys
        BAILEYS_COMMIT=$(git rev-parse HEAD)
        BAILEYS_SHORT=$(git rev-parse --short HEAD)
        cd ..
        
        echo "" >> changes.txt
        echo "## 🔧 Submodule 信息" >> changes.txt
        echo "- Baileys: \`$BAILEYS_SHORT\` ($BAILEYS_COMMIT)" >> changes.txt
        
        cat changes.txt
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body_path: changes.txt
        draft: false
        prerelease: false
    
    - name: Update package.json version
      if: github.event_name == 'workflow_dispatch'
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        VERSION_NO_V=${VERSION#v}
        
        # 更新 package.json 版本
        npm version $VERSION_NO_V --no-git-tag-version
        
        # 提交版本更新
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore: bump version to $VERSION" || true
        git push || true
    
    - name: Post-release notifications
      run: |
        echo "🎉 版本 ${{ steps.version.outputs.version }} 发布成功!"
        echo "📦 发布包含以下内容:"
        echo "- ✅ 代码质量检查通过"
        echo "- ✅ 安全审计通过"
        echo "- ✅ 功能测试通过"
        echo "- 📋 更新日志已生成"

  notify-success:
    needs: create-release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Success notification
      run: |
        echo "🚀 发布流程已完成！"
        echo "新版本已在 GitHub Releases 中可用。"
